function x(){}const F=t=>t;function k(t,n){for(const e in n)t[e]=n[e];return t}function w(t){return t()}function M(){return Object.create(null)}function E(t){t.forEach(w)}function P(t){return typeof t=="function"}function S(t,n){return t!=t?n==n:t!==n||t&&typeof t=="object"||typeof t=="function"}let a;function U(t,n){return t===n?!0:(a||(a=document.createElement("a")),a.href=n,t===a.href)}function A(t){return Object.keys(t).length===0}function j(t,...n){if(t==null){for(const o of n)o(void 0);return x}const e=t.subscribe(...n);return e.unsubscribe?()=>e.unsubscribe():e}function B(t,n,e){t.$$.on_destroy.push(j(n,e))}function C(t,n,e,o){if(t){const u=d(t,n,e,o);return t[0](u)}}function d(t,n,e,o){return t[1]&&o?k(e.ctx.slice(),t[1](o(n))):e.ctx}function D(t,n,e,o){return t[2],n.dirty}function G(t,n,e,o,u,m){if(u){const y=d(n,e,o,m);t.p(y,u)}}function H(t){if(t.ctx.length>32){const n=[],e=t.ctx.length/32;for(let o=0;o<e;o++)n[o]=-1;return n}return-1}function I(t){const n=typeof t=="string"&&t.match(/^\s*(-?[\d.]+)([^\s]*)\s*$/);return n?[parseFloat(n[1]),n[2]||"px"]:[t,"px"]}let i;function l(t){i=t}function b(){if(!i)throw new Error("Function called outside component initialization");return i}function J(t){b().$$.on_mount.push(t)}function K(t){b().$$.after_update.push(t)}const r=[],h=[];let s=[];const p=[],g=Promise.resolve();let _=!1;function q(){_||(_=!0,g.then(v))}function L(){return q(),g}function O(t){s.push(t)}const f=new Set;let c=0;function v(){if(c!==0)return;const t=i;do{try{for(;c<r.length;){const n=r[c];c++,l(n),z(n.$$)}}catch(n){throw r.length=0,c=0,n}for(l(null),r.length=0,c=0;h.length;)h.pop()();for(let n=0;n<s.length;n+=1){const e=s[n];f.has(e)||(f.add(e),e())}s.length=0}while(r.length);for(;p.length;)p.pop()();_=!1,f.clear(),l(t)}function z(t){if(t.fragment!==null){t.update(),E(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(O)}}function N(t){const n=[],e=[];s.forEach(o=>t.indexOf(o)===-1?n.push(o):e.push(o)),e.forEach(o=>o()),s=n}export{U as a,K as b,B as c,h as d,O as e,I as f,C as g,H as h,D as i,P as j,F as k,l,M as m,x as n,J as o,v as p,A as q,E as r,S as s,L as t,G as u,N as v,i as w,w as x,r as y,q as z};
